name: OpenGNB builder


on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      DEBUG:
        description: 'DEBUG [可选]'
        required: false
        default: 'false'

  #push:
  #  branches:
  #    - master

  #schedule:
  #  - cron: 0 8 * * 5

  #watch:
  #  types: [started]

### 环境变量设置
env:
# 源码仓库:分支
  REPO_BRANCH: master
# 上传 binaries 到 Github Releases
  UPLOAD_RELEASES: true
# 删除无用文件以增加编译空间
  DELETE_USELESS_FILES: false
# 删除早期的 workflow 任务
  DELETE_OLD_WORKFLOW: false

jobs:
  Compile:
    runs-on: ubuntu-20.04
    permissions:
      issues: write
      pull-requests: write
      contents: write

    steps:
    # - name: Maximize Build Space
    #   uses: easimon/maximize-build-space@master
    #   with:
    #     root-reserve-mb: 5120
    #     swap-size-mb: 512
    #     remove-dotnet: 'true'
    #     remove-android: 'true'

    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Variables
      run: |
        echo "Free space:"
        df -h

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get install build-essential cmake libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc zip -y
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        if [ "${{ env.DELETE_USELESS_FILES }}" == true ]
        then
            docker rmi $(docker images -q)
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
            sudo -E apt-get clean
        fi

    - name: Clone OpenGNB Source Code
      run: |
        git clone -b ${{ env.REPO_BRANCH }} https://github.com/gnbdev/opengnb.git opengnb
        ln -sf /workdir/opengnb $GITHUB_WORKSPACE/opengnb
        cd opengnb
        GNB_VERSION=$(cat version)
        echo "GNB_VERSION=$GNB_VERSION" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y_%m_%d_%H_%M)" >> $GITHUB_ENV

    - name: Compile OpenGNB Linux
      run: |
        cd opengnb
        echo $PATH
        make -f Makefile.linux clean &&make -f Makefile.linux install
        tar zcf opengnb_${{ env.GNB_VERSION }}_linux.tar.gz -C bin .
        mkdir -p $GITHUB_WORKSPACE/dist
        cp -af opengnb_${{ env.GNB_VERSION }}_linux.tar.gz $GITHUB_WORKSPACE/dist

    - name: Compile OpenGNB openwrt
      run: |
        echo $PATH
        bash build.sh
        [ $? == 0 ] && echo "Result=true" >> $GITHUB_ENV || echo "Result=false" >> $GITHUB_ENV

    - name: Start SSH via ngrok
      uses: luchihoratiu/debug-via-ssh@main
      if: github.event.inputs.DEBUG == 'true' && !cancelled()
      with:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
          SSH_PASS: ${{ secrets.SSH_PASSWORD }}

    - name: Upload binaries to Github Release
      uses: svenstaro/upload-release-action@v2
      if: env.UPLOAD_RELEASES == 'true' && env.Result == 'true' && !cancelled()
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*
        file_glob: true
        tag: ${{ env.GNB_VERSION }}
        overwrite: true

    - name: Upload binaries to Qiniu
      run: |
        echo $PATH
        python -m pip install --upgrade pip
        pip install qiniu
        python ${{ github.action_path }}/upload_to_qiniu.py --access_key ${{ secrets.QINIU_ACCESS_KEY }} --secret_key ${{ secrets.QINIU_SECRET_KEY }} --bucket_name ${{ secrets.QINIU_BUCKET }} --local_dir dist --remote_dir /gnb/${{ env.GNB_VERSION }}

    - name: Delete old Workflow Runs
      uses: GitRML/delete-workflow-runs@main
      if: env.DELETE_OLD_WORKFLOW == 'true' && !cancelled()
      with:
        retain_days: 3
        keep_minimum_runs: 5